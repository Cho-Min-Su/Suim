<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	

	<beans:bean id="naverLoginBO" class="com.suim.common.api.NaverLoginBO" />
	
		<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅-->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="973249404961-glcrhac5dh3lall32j4fdgcti4qemf4d.apps.googleusercontent.com" />
		<beans:constructor-arg value="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" />
	</beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" />
		<beans:property name="redirectUri" value="http://localhost:8006/member/loginGoogle" />
	</beans:bean>
	<!-- 웹소켓 -->
		<!-- websocket handler -->
	
	<beans:bean id="myHandler" class="com.suim.common.socket.EchoHandler" />
	<websocket:handlers>
		<websocket:mapping handler="myHandler" path="/notification" />
		<websocket:handshake-interceptors>
	         <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
	      </websocket:handshake-interceptors>
		<websocket:sockjs websocket-enabled="true"/>
	</websocket:handlers>
	
	
	
	
	
	
	
	

	<!-- 스프링에서 기본으로 제공하는 multipartResolver는 CommonsMultipartResolver 이므로, 순수한 multipartResolver를 사용하기 위해 빈 이름으로 "multipartResolver"를 등록해야함 + 프로퍼티를 이용 최대 가능한 업로드 사이즈 지정함 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	
	<beans:property name="maxUploadSize" value="100000000"></beans:property>
	
	</beans:bean>
	
	<context:component-scan base-package="com.suim" />
	
	
	<interceptors>
		<interceptor>
			<mapping path="/member/join" />
			<mapping path="/member/joinSuccess" />
			<mapping path="/member/login" />
			<mapping path="/member/loginGoogle" />
			<mapping path="/member/loginNaver" />
			<mapping path="/member/doLogin"/>
			<mapping path="/member/verifyPage"/>
			<mapping path="/member/verifyEmail"/>
			<mapping path="/member/verifySuccess"/>
			<mapping path="/member/findId"/>
			<mapping path="/member/findPw"/>
			<mapping path="/member/term"/>
			
			<beans:bean class="com.suim.common.interceptor.AuthInterceptor" 
															id="AuthInterceptor" />
		</interceptor>
		<interceptor>
	    	<mapping path="/*" />
	    	<mapping path="/member/*" />
	    	<beans:bean class="com.suim.common.interceptor.LoginInterceptor" id="LoginInterceptor" />
		</interceptor>
		<interceptor>
	    	<mapping path="/admin/*" />
	    	<beans:bean class="com.suim.common.interceptor.AdminInterceptor" id="AdminInterceptor" />
		</interceptor>
	</interceptors>
	
	
	
	
	
	
	
</beans:beans>
